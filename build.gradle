plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.depromeet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'

    // Swagger 3.0.0
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // Image Scaling
    implementation group: 'com.mortennobel', name: 'java-image-scaling', version: '0.8.6'

    // AWS Library
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'

    // Utility Class Package
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    // JWT Token Library
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // for processing warning message (javax.annotation.meta.WHEN)
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    //lucy
    implementation group: 'com.navercorp.lucy', name: 'lucy-xss-servlet', version: '2.0.1'
    implementation 'com.navercorp.lucy:lucy-xss:1.6.3'
    //StringEscapeUtils 를 사용하기 위해 commons-text 의존성 추가
    implementation 'org.apache.commons:commons-text:1.8'
    implementation 'junit:junit:4.13.1'

    runtimeOnly 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}


def profile = project.hasProperty("profile") ? project.property("profile").toString() : "local"
println "profile  : $profile"


ext.profile = (!project.hasProperty('profile') || !profile) ? "$profile" : profile

sourceSets {
    main.java.srcDir querydslDir
    main.resources.srcDirs("src/main/resources", "src/main/resources-$profile")
}

tasks {
    processResources {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
}

configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
